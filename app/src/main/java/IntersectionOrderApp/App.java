/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package IntersectionOrderApp;

import java.util.ArrayList;
import java.util.Arrays;

public class App 
{
    public static int findTheKthSmallestInIntersection(ArrayList<Integer> list1, ArrayList<Integer> list2, int k)
    {
        if(list1.size() == 0 || list2.size() == 0)
            return -1;

        ArrayList<Integer> list = new ArrayList<>();
        for (Integer i : list1)
        {
            if(list2.contains(i))
                list.add(i);
        }
        
        return kthSmallest(list, 0, list.size() - 1, k);
    }

    public static int kthSmallest(ArrayList<Integer> list, int start, int end, int k)
    {
        int partition = partition(list, start, end);
 
        if (partition == k - 1)
            return list.get(partition);
 
        else if (partition < k - 1)
            return kthSmallest(list, partition + 1, end, k);
 
        else
            return kthSmallest(list, start, partition - 1, k);
    }

    public static int partition(ArrayList<Integer> list, int start, int end)
    {
        int pivot = list.get(end), pivotindex = start;
        for (int i = start; i <= end; i++) 
        {
            if (list.get(i) < pivot) 
            {
                int temp = list.get(i);
                list.set(i, list.get(pivotindex));
                list.set(pivotindex, temp);
                pivotindex++;
            }
        }
 
        int temp = list.get(end);
        list.set(end, list.get(pivotindex));
        list.set(pivotindex, temp);
 
        return pivotindex;
    }

    public static void main(String[] args) {
        ArrayList<Integer> list1 = new ArrayList<>(Arrays.asList(10, 5, 6, 1, 23, 11));
        ArrayList<Integer> list2 = new ArrayList<>(Arrays.asList(5, 10, 7, 8, 46, 23));
        System.out.println(findTheKthSmallestInIntersection(list1, list2, 2));
    }
}
